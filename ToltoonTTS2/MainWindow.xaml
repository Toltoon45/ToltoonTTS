<Window x:Class="ToltoonTTS2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToltoonTTS2"
        xmlns:helpers="clr-namespace:ToltoonTTS2.Scripts"
        mc:Ignorable="d"
        Title="ToltoonTTS2" Height="350" Width="626" Closing="Window_Closing" MinWidth="400" MinHeight="250">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Horizontal">
            <TabControl x:Name="TabControlMainWindow" MinWidth="450">
                <TabItem x:Name="TabItemConnection" Header="Подключение">
                    <StackPanel>
                        <!-- Основной контейнер -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Подключение к Twitch -->
                            <StackPanel Grid.Column="0" Margin="5">
                                <Label Content="Подключение к Twitch" HorizontalAlignment="Center" />
                                <Border BorderBrush="Black" BorderThickness="1" Margin="5" Width="176">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                            <PasswordBox x:Name="PasswordboxTwitchApi" 
             helpers:PasswordBoxHelper.Password="{Binding TwitchApi, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
             Margin="10,0,0,0" 
             VerticalAlignment="Center" 
             Width="50" 
             ToolTip="Если выдать НЕ ВСЕ разрешения при генерации API, то твич не будет видеть награды за баллы канала! И заметить это очень сложно!"/>
                                            <Label x:Name="LabelTwitchApi" VerticalAlignment="Center" Margin="0,0,5,0" ToolTip="Если выдать НЕ ВСЕ разрешения при генерации API, то твич не будет видеть награды за баллы канала! И заметить это очень сложно!">
                                                <Hyperlink>Access Token</Hyperlink>
                                            </Label>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10" ToolTip="Твич отключил PubSub, эта функция недоступна" >
                                            <TextBox Text="{Binding TwitchClientId, UpdateSourceTrigger=PropertyChanged}" ToolTip="Твич отключил PubSub, эта функция недоступна" 
                                                 Margin="10,0,0,0" MaxHeight="20" TextWrapping="Wrap" VerticalAlignment="Center" Width="50" IsEnabled="False"/> 
                                            <Label x:Name="labelClientID" HorizontalAlignment="Left" VerticalAlignment="Center" IsEnabled="False">
                                                <Hyperlink>Client ID</Hyperlink>
                                            </Label>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                            <TextBox x:Name="TextboxTwitchNickName" Text="{Binding TwitchNickname, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,0,0" MaxHeight="50" TextWrapping="Wrap" VerticalAlignment="Center" Width="50" MaxWidth="50"/>
                                            <Label x:Name="labelTwitchNick" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Center">
                                                <TextBlock IsEnabled="False"><Run Text="Название канала"/><LineBreak/><Run Text="куда подключаться"/></TextBlock>
                                            </Label>
                                        </StackPanel>
                                        <CheckBox x:Name="CheckBoxConnectToTwitch" IsChecked="{Binding ConnectToTwitch}" 
                                                  Content="Подключиться к Twitch" Margin="10,0,0,10"/>
                                    </StackPanel>
                                </Border>
                            </StackPanel>

                            <!-- Подключение к GoodGame -->
                            <StackPanel Grid.Column="1" Margin="5">
                                <Label Content="Подключение к GoodGame" HorizontalAlignment="Center" />
                                <Border BorderBrush="Black" BorderThickness="1" Margin="5" Width="190">
                                    <StackPanel x:Name="StackPanelGoodgameConnection" Orientation="Vertical" Margin="10,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBox Text="{Binding GoodgameNickname, UpdateSourceTrigger=PropertyChanged}" x:Name="TextBoxGoodgameLogin" Width="50" MaxHeight="20" Margin="0,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                            <Label x:Name="LabelGoodgameLogin" Content="GG логин"></Label>
                                        </StackPanel>
                                        <CheckBox x:Name="CheckBoxConnectToGoodgame" IsChecked="{Binding ConnectToGoodgame, UpdateSourceTrigger=PropertyChanged}"
                                                  Content="Подключиться к GoodGame" Margin="0,5,0,10"/>
                                    </StackPanel>
                                </Border>
                            </StackPanel>
                        </Grid>

                        <GridSplitter Grid.Column="1" Width="5" VerticalAlignment="Stretch" ShowsPreview="True"/>

                        <StackPanel Orientation="Horizontal" Margin="10,10,10,10">
                            <Button x:Name="buttonSaveJsonProfile" Command="{Binding SaveProfile}" Content="Сохранить" Width="65" Margin="10,0,0,0"/>
                            <TextBox x:Name="textboxJsonProfileNameToSave" Text="{Binding  NameToSaveProfile,UpdateSourceTrigger=PropertyChanged}" Width="80" Height="20" Margin="10,0,0,0"></TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                            <Button x:Name="buttonLoadJsonProfile" Command="{Binding LoadProfile}" Content="Загрузить" Width="65" Margin="10,0,0,0"/>
                            <ComboBox x:Name="comboBoxProfileSelect" ItemsSource="{Binding AvailableProfiles}" SelectedItem="{Binding  SelectedProfile,UpdateSourceTrigger=PropertyChanged}" Width="80" Margin="10,0,0,0"/>
                            <Button x:Name="ButtonDeleteProfile" Command="{Binding DeleteProfile}" Content="Удалить" Margin="10,0,0,0"/>
                        </StackPanel>
                    </StackPanel>
                </TabItem>

                <TabItem x:Name="TabItemTTS" Header="Text to speech">
                    <StackPanel Orientation="Vertical">
                        <Border Grid.Column="0" BorderBrush="Black" BorderThickness="1" Margin="5" Width="430" HorizontalAlignment="Left">
                            <StackPanel Orientation="Vertical">
                                <CheckBox IsChecked="{Binding RemoveEmoji}" Command="{Binding RemoveEvoji}" x:Name="RemoveEmoji" Content="Удалять эмодзи" Margin="10,10,0,10"/>
                                <StackPanel Orientation="Horizontal">
                                    <ComboBox x:Name="comboBoxInstalledVoices" SelectedItem="{Binding SelectedVoice, UpdateSourceTrigger=PropertyChanged}"
                                              ItemsSource="{Binding AvailableVoices}"
                                              Width="120" HorizontalAlignment="Left" Margin="10,0,0,10" ToolTipService.InitialShowDelay="0"/>

                                    <Label x:Name="labelInstalledVoices" Content="Установленные голоса"></Label>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Slider x:Name="sliderTtsSpeedValue" Value="{Binding TtsSpeedValue, UpdateSourceTrigger=PropertyChanged}"
                                            IsSnapToTickEnabled="true" Minimum="-10" Margin="10,0,0,0" Width="200"/>
                                    <Label x:Name="labelTtsSpeedValue" Content="{Binding LabelTtsSpeed, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,0,0"></Label>
                                    <Label x:Name="labelTtsSpeed" Content="Скорость озвучки текста"></Label>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Slider x:Name="sliderTtsVolumeValue" Value="{Binding TtsVolumeValue, UpdateSourceTrigger=PropertyChanged}"
                                            IsSnapToTickEnabled="true" Minimum="0" Margin="10,0,0,0" Maximum="100" Width="200"/>
                                    <Label x:Name="labelVolumeValue" Content="{Binding LabelTtsVolume, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,0,0"></Label>
                                    <Label x:Name="labelVolume" Content="Громкость" Margin="10,0,0,0"></Label>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                        <Border Grid.Column="0" BorderBrush="Black" BorderThickness="1" Margin="5" Width="430" Height="82" HorizontalAlignment="Left">
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                                    <Label x:Name="LabelTtsDoNotTtsIfStartWith" Content="Не озвучивать, если начинается с" Margin="10,0,0,0"></Label>
                                    <TextBox x:Name="TextBoxTtsDoNotTtsIfStartWith" Text="{Binding DoNotTtsIfStartWith, UpdateSourceTrigger=PropertyChanged}"
                                             Width="80" Height="20" Margin="10,0,0,0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                                    <Label x:Name="LabelSkipMessage" Margin="10,0,0,0" Content="Пропустить одно сообщение"></Label>
                                    <TextBox Text="{Binding SkipMessage, UpdateSourceTrigger=PropertyChanged}"
                                        x:Name="TextBoxSkipMessage" Width="80" Height="20" Margin="10,0,0,0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                                    <Label x:Name="LabelSkipMessageAll" Margin="10,0,0,0" Content="Пропустить все сообщения"></Label>
                                    <TextBox x:Name="TextBoxSkipMessageAll" Text="{Binding SkipMessageAll, UpdateSourceTrigger=PropertyChanged}"
                                             Width="80" Height="20" Margin="10,0,0,0"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                        <Label Content="Пропуск одного сообщения - ctrl+alt+b | всю очередь ctrl + alt + shift + b"></Label>
                    </StackPanel>
                </TabItem>
                <TabItem x:Name="TabItemIndividualVoices" Header="Индив. голоса" ToolTip="На ремонте">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- Кнопки и чекбокс -->
                            <RowDefinition Height="Auto"/>
                            <!-- Текстбокс команды -->
                            <RowDefinition Height="*"/>
                            <!-- Прокручиваемый контент -->
                        </Grid.RowDefinitions>

                        <!-- Верхний блок -->
                        <StackPanel Grid.Row="0">
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="ButtonIndividualVoices" Command="{Binding OpenIndividualVoicesWindow}"
                                        Content="Голоса каждому" Margin="10,10,0,10"/>
                                <CheckBox x:Name="checkBoxVoiceIndividualVoices" Content="Включить привязку голосов"
                          IsChecked="{Binding IndividualVoicesEnabled, UpdateSourceTrigger=PropertyChanged}" Margin="10,10,0,10"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="6,0,0,0">
                                <!-- Закомментированная часть -->
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBox x:Name="TextBoxGetUserVoices" Text="{Binding CommandToGetOtherUserVoiceName, UpdateSourceTrigger=PropertyChanged}" Width="100" ToolTip="![команда] [никнейм]" Margin="10,5,0,10"/>
                                <Label x:Name="LabelGetUserVoice" Content="Команда для чата узнать голос пользователя" ToolTip="![команда] [никнейм]"/>
                            </StackPanel>
                        </StackPanel>

                        <!-- Прокручиваемый список голосов -->
                        <ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
                            <ItemsControl x:Name="ItemControlAllVoicesChildren"
                          ItemsSource="{Binding ItemSourceAllVoices}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" Margin="5">
                                            <TextBlock Text="{Binding Name}" Width="150" VerticalAlignment="Center"/>
                                            <TextBox Text="{Binding TextBoxVolume, UpdateSourceTrigger=PropertyChanged}" Width="30" Margin="10,0,0,0"/>
                                            <TextBox Text="{Binding TextBoxSpeed, UpdateSourceTrigger=PropertyChanged}" Width="30" Margin="10,0,0,0"/>
                                            <CheckBox IsChecked="{Binding IsEnabled, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,0,0"/>
                                            <Button Content="Проверить" Command="{Binding TestVoiceCommand}" Margin="5,0,0,0"></Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem x:Name="TabItemBlackList" Header="Чёрный список">
                    <StackPanel>
                        <StackPanel Orientation="Vertical">
                            <!--Чёрный список-->
                            <Border Grid.Column="0" BorderBrush="Black" BorderThickness="1" Margin="5" Width="430" HorizontalAlignment="Left">
                                <StackPanel Orientation="Horizontal" Height="118">
                                    <StackPanel Orientation="Vertical">
                                        <Label x:Name="LabelBlackList" Content="Чёрный список пользователей" Width="180" HorizontalAlignment="Left" Margin="0,0,0,0"></Label>
                                        <ListBox x:Name="ListBoxBlackList" ItemsSource="{Binding BlackListMembers}" 
                                                 SelectedItem="{Binding BlackListSelectedItem, UpdateSourceTrigger=PropertyChanged}"
                                                 Width="150" Height="84" ScrollViewer.VerticalScrollBarVisibility="Auto" HorizontalAlignment="Left" Margin="10,0,0,10">
                                        </ListBox>
                                    </StackPanel>

                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                        <TextBox x:Name="TextBoxBlackList" Text="{Binding BlackListInput, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" Margin="10,10,10,0"/>
                                        <Button x:Name="ButtonBlackListAdd" Command="{Binding AddToBlackListCommand}" Content="Добавить" Margin="10"/>
                                        <Button x:Name="ButtonBlackListDelete" Command="{Binding DeleteFromBlackListCommand}" Content="Удалить" Margin="10"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>

                            <!--Замена слов-->
                            <Border Grid.Column="0" BorderBrush="Black" BorderThickness="1" Margin="5" Width="430" HorizontalAlignment="Left" Height="166">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <!-- Первый набор элементов -->
                                    <StackPanel Grid.Column="0" Margin="5" Orientation="Vertical">
                                        <Label Margin="15,-10,0,0" Content="Что заменять" />
                                        <TextBox x:Name="TextBoxWhatToReplace"
                                                 Text="{Binding WordToReplaceInput, UpdateSourceTrigger=PropertyChanged}"
                                                 TextWrapping="Wrap" Width="100" Margin="10,-5,10,5" />
                                        <ListBox x:Name="ListBoxWhatToReplace" 
                                                 ItemsSource="{Binding WordToReplace, UpdateSourceTrigger=PropertyChanged}" 
                                                 SelectedIndex="{Binding WordReplaceSelectedIndex, UpdateSourceTrigger=PropertyChanged}"
                                                 Width="100" Height="100"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
                                    </StackPanel>

                                    <!-- Управляющие кнопки -->
                                    <StackPanel Grid.Column="1" Margin="5" Orientation="Vertical" VerticalAlignment="Center">
                                        <Button x:Name="ButtonReplaceWordAdd" Command="{Binding AddWordReplace}" Content="Добавить" Margin="10,10,10,0" />
                                        <Button x:Name="ButtonReplaceWordDelete" Command="{Binding DeleteWordReplace}" Content="Удалить" Margin="10,10,10,10" />
                                    </StackPanel>

                                    <!-- Второй набор элементов -->
                                    <StackPanel Grid.Column="2" Margin="5" Orientation="Vertical">
                                        <Label Margin="10,-10,0,0" Content="На что заменять" />
                                        <TextBox x:Name="TextBoxWhatToReplaceWith"
                                                 Text="{Binding WordReplaceToWithInput, UpdateSourceTrigger=PropertyChanged}"
                                                 TextWrapping="Wrap" Width="100" Margin="10,-5,10,5" />
                                        <ListBox x:Name="ListBoxWhatToReplaceWith" Width="100" Height="100" MaxHeight="100"
                                                 ItemsSource="{Binding WordWhatToReplaceWith, UpdateSourceTrigger=PropertyChanged}" 
                                                 SelectedIndex="{Binding WordReplaceSelectedIndex, UpdateSourceTrigger=PropertyChanged}"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     ScrollViewer.HorizontalScrollBarVisibility="Auto"/>
                                    </StackPanel>
                                </Grid>
                            </Border>

                        </StackPanel>
                    </StackPanel>
                </TabItem>
            </TabControl>
            <StackPanel Orientation="Vertical">
                <Label x:Name="LabelTwitchStatusMessage" Content="{Binding TwitchConnectionStatus, UpdateSourceTrigger=PropertyChanged}"></Label>
                <Label x:Name="LabelGoodgameStatusMessage"></Label>
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <Button x:Name="buttonConnect" Command="{Binding ConnectToChats}"
                                Content="Connect" HorizontalAlignment="Left" Margin="10,10,0,0"/>
                        <Button x:Name="buttonTwitchDisconnect" ToolTip="Работает только с твичом (пока что)" Content="Disconnect" HorizontalAlignment="Left" Margin="10,10,0,0"/>
                    </StackPanel>
                    <StackPanel>
                        <Button x:Name="ButtonOpenProgramData" Command="{Binding OpenDataDirectory}" 
                                Margin="10,10,10,0" Content="Файлы программы" Width="120" HorizontalAlignment="Left"/>
                    </StackPanel>
                </StackPanel>
                <Label x:Name="LabelVoiceErrorMessage" Content="{Binding VoiceTestErrorMessage}"/>
            </StackPanel>
        </StackPanel>
        <Button Margin="0,0,45,20" Content="Переподключиться" ToolTip="Работает только с Twitch (пока что)" VerticalAlignment="Bottom" HorizontalAlignment="right"/>
        <Label x:Name="LabelProgramVersion" Content="1.1.0 x86" HorizontalAlignment="Right" VerticalAlignment="Bottom"></Label>


    </Grid>
</Window>